{"version":3,"sources":["utils.js","component/tab.js","component/content.js","component/header.js","component/home.js","component/passwordForm.js","component/password.js","component/login.js","component/userContent.js","component/users.js","App.js","reportWebVitals.js","index.js"],"names":["isElectron","navigator","userAgent","toLowerCase","indexOf","Tab","props","history","createHashHistory","createBrowserHistory","React","useState","tabList","setTabList","useEffect","fetch","process","then","res","json","result","arr","data","map","item","TABLE_NAME","handleTab","error","console","log","notification","message","description","placement","localStorage","removeItem","push","pathUrl","window","location","href","className","tab","index","nowTab","onClick","Content","ssRef","useRef","setData","onCreated","useCallback","current","hideFileMenuItems","showSpinner","method","headers","body","JSON","stringify","table","activeRowIndex","getActiveSheet","usedRange","rowIndex","activeColIndex","colIndex","colID","colSTR","a","parseInt","b","clear","type","range","selectRange","getRangeAddress","hideSpinner","Fragment","usedRowIdx","usedColIdx","row","j","getData","cells","forEach","cell","key","value","icon","SaveOutlined","showSheetTabs","ref","created","frozenRows","dataSource","Header","innerWidth","browserWidth","setBrowserWidth","addEventListener","goHome","src","alt","width","style","marginRight","getItem","wrap","justifyContent","HomeOutlined","color","fontWeight","UserOutlined","UnlockOutlined","LogoutOutlined","Home","setNowTab","PasswordForm","Form","useForm","form","labelCol","span","wrapperCol","initialValues","remember","onFinish","values","newPassword","confirmPassword","warning","user","info","resetFields","onFinishFailed","errorInfo","autoComplete","padding","backgroundColor","boxShadow","Item","label","name","rules","required","Password","size","offset","htmlType","Log","LoginComponent","state","mode","newMode","this","setState","e","preventDefault","username","target","password","fullname","email","createpassword","repeatpassword","setItem","admin","dom","document","getElementsByTagName","i","length","id","toggleMode","bind","htmlFor","onSubmit","Component","LoginForm","disabled","Input","placeholder","Login","UserContent","isLoading","setIsLoading","userData","setUserData","innerHeight","talbleHeight","setTableHeight","pageSize","position","pagination","setPagenation","getUsers","tableSorter","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","onChange","onPressEnter","marginBottom","display","SearchOutlined","closeDropdown","filterIcon","filtered","undefined","onFilter","record","toString","includes","columns","title","sorter","render","_","elm","onConfirm","okText","cancelText","danger","DeleteOutlined","bordered","rowKey","loading","scroll","y","Users","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4c06f64a.chunk.js","sourcesContent":["export const isElectron = () => {\r\n  const userAgent = navigator.userAgent.toLowerCase();\r\n  return userAgent.indexOf(' electron/') !== -1;\r\n};","import React from 'react';\r\nimport { notification } from 'antd';\r\nimport { createBrowserHistory, createHashHistory } from 'history';\r\nimport { isElectron } from '../utils';\r\n\r\nconst Tab = (props) => {\r\n\r\n    const history = isElectron() ? createHashHistory() : createBrowserHistory();\r\n    const [tabList, setTabList] = React.useState(null);\r\n\r\n    React.useEffect(() => {\r\n        fetch(`${process.env.REACT_APP_API}/get-table-list`)\r\n            .then(res => res.json()).then((result) => {\r\n                let arr = result.data.map((item)=>item.TABLE_NAME)\r\n                setTabList(arr);\r\n                props.handleTab(arr[0]);\r\n            },\r\n            (error) => {\r\n                console.log(error);\r\n                notification.error({\r\n                    message: \"Connect Error\",\r\n                    description: \"Server has got some problems.\",\r\n                    placement: \"topRight\"\r\n                });\r\n                localStorage.removeItem('user');\r\n                localStorage.removeItem('admin');\r\n                history.push('/login');\r\n                let pathUrl = window.location.href;\r\n                window.location.href = pathUrl;\r\n            }\r\n        );\r\n    },[]);\r\n\r\n    return (\r\n        <div className=\"tabs\">\r\n            {\r\n                tabList?.map((tab, index) => {\r\n                    return <div\r\n                        key={index}\r\n                        className={tab === props.nowTab ? 'tab activeTab' : 'tab'}\r\n                        onClick={() => props.handleTab(tab)}\r\n                    >\r\n                        {tab}\r\n                    </div>;\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Tab;","import React from 'react';\r\nimport { Button } from 'antd';\r\nimport { SaveOutlined } from '@ant-design/icons';\r\nimport { SpreadsheetComponent, SheetsDirective, SheetDirective, RangesDirective, RangeDirective, getRangeAddress } from '@syncfusion/ej2-react-spreadsheet';\r\n\r\nconst Content = (props) => {\r\n\r\n    const ssRef = React.useRef();\r\n    const [data, setData] = React.useState([]);\r\n\r\n    const dataSave = () => {\r\n        ssRef.current.showSpinner();\r\n        let usedRowIdx = ssRef.current.getActiveSheet().usedRange.rowIndex;\r\n        let usedColIdx = ssRef.current.getActiveSheet().usedRange.colIndex;\r\n        let arr = [];\r\n        let row = [];\r\n        let j = 0;\r\n        ssRef.current.getData(getRangeAddress([0, 0, usedRowIdx, usedColIdx])).then((cells) => {\r\n            cells.forEach((cell, key) => {\r\n                if (j > usedColIdx) {\r\n                    arr = [...arr, row];\r\n                    row = [];\r\n                    j = 0;\r\n                }\r\n                row = [...row, cell.value]; \r\n                j++;\r\n            })\r\n            fetch(`${process.env.REACT_APP_API}/save-content`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ table: props.nowTab, data: arr })\r\n            }).then(res => res.json()).then((result) => {\r\n                if (result.message === 'success') {\r\n                    ssRef.current.hideSpinner();\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    const onCreated = React.useCallback(() => {\r\n        ssRef.current.hideFileMenuItems([\"File\"], true);\r\n    }, [ssRef]);\r\n\r\n    React.useEffect(() => {\r\n        if (props.nowTab) {\r\n            ssRef.current.showSpinner();\r\n            fetch(`${process.env.REACT_APP_API}/get-content`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ table: props.nowTab })\r\n            }).then(res => res.json()).then((result) => {\r\n                if (result.message === 'success') {\r\n                    let activeRowIndex = ssRef.current.getActiveSheet().usedRange.rowIndex;\r\n                    let activeColIndex = ssRef.current.getActiveSheet().usedRange.colIndex;\r\n                    if (activeRowIndex) {\r\n                        let colSTR = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n                        let colID;\r\n                        if (activeColIndex < 26) {\r\n                            colID = colSTR[activeColIndex];\r\n                        } else {\r\n                            let a = parseInt(activeColIndex / 26);\r\n                            let b = (activeColIndex % 26);\r\n                            colID = `${colSTR[a - 1]}${colSTR[b]}`;\r\n                        }\r\n                        ssRef.current.clear({ type: 'Clear All', range: `A1:${colID}${activeRowIndex + 1}` });\r\n                        ssRef.current.selectRange(getRangeAddress([1, 0, 1, 0]));\r\n                    }\r\n                    setData(result.data);\r\n                    ssRef.current.hideSpinner();\r\n                }\r\n            });\r\n        }\r\n    }, [props.nowTab]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                props.nowTab && <Button type=\"primary\" className=\"save\" onClick={dataSave} icon={<SaveOutlined />}>Save</Button>\r\n            }\r\n            <SpreadsheetComponent showSheetTabs={false} ref={ssRef} created={onCreated}>\r\n                <SheetsDirective>\r\n                    <SheetDirective frozenRows={1}>\r\n                        <RangesDirective>\r\n                            <RangeDirective dataSource={data} />\r\n                        </RangesDirective>\r\n                    </SheetDirective>\r\n                </SheetsDirective>\r\n            </SpreadsheetComponent>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Content;\r\n","import React from 'react';\r\nimport { Button, Space } from 'antd';\r\nimport { LogoutOutlined, UnlockOutlined, HistoryOutlined, UserOutlined, HomeOutlined } from '@ant-design/icons';\r\nimport { createBrowserHistory, createHashHistory } from 'history';\r\nimport { isElectron } from '../utils';\r\n\r\nconst Header = () => {\r\n\r\n    const history = isElectron() ? createHashHistory() : createBrowserHistory();\r\n    const [browserWidth, setBrowserWidth] = React.useState(window.innerWidth);\r\n\r\n    const handleResize = () => {\r\n        setBrowserWidth(window.innerWidth);\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    const goHome = () => {\r\n        history.push('/');\r\n        let pathUrl = window.location.href;\r\n        window.location.href = pathUrl;\r\n    }\r\n\r\n    const userManage = () => {\r\n        history.push('/users');\r\n        let pathUrl = window.location.href;\r\n        window.location.href = pathUrl;\r\n    }\r\n\r\n    const changePassword = () => {\r\n        history.push('/change-password');\r\n        let pathUrl = window.location.href;\r\n        window.location.href = pathUrl;\r\n    }\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('user');\r\n        localStorage.removeItem('admin');\r\n        history.push('/login');\r\n        let pathUrl = window.location.href;\r\n        window.location.href = pathUrl;\r\n    }\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <a onClick={goHome}>\r\n                <img src=\"logo.png\" alt=\"logo\" width=\"100\" style={{ marginRight: '20px' }} />\r\n            </a>\r\n            <div className=\"header-content\">\r\n                {\r\n                    browserWidth > 961 &&\r\n                    <p className=\"header-text\" >Hello, {localStorage.getItem('user')} !</p>\r\n                }\r\n                <Space wrap style={{ justifyContent: 'center' }}>\r\n                    <Space>\r\n                        <Button\r\n                            type=\"text\"\r\n                            icon={<HomeOutlined />}\r\n                            style={{ color: '#0044aa', fontWeight: 'bold' }}\r\n                            onClick={goHome}\r\n                        >\r\n                            Home\r\n                        </Button>\r\n                        {\r\n                            localStorage.getItem('admin') === 'true' ?\r\n                                <React.Fragment>\r\n                                    <Button\r\n                                        type=\"text\"\r\n                                        icon={<UserOutlined />}\r\n                                        style={{ color: '#0044aa', fontWeight: 'bold' }}\r\n                                        onClick={userManage}\r\n                                    >\r\n                                        User Manage\r\n                                    </Button>\r\n                                </React.Fragment>\r\n                                : null\r\n                        }\r\n                    </Space>\r\n                    <Space>\r\n                        <Button\r\n                            type=\"text\"\r\n                            icon={<UnlockOutlined />}\r\n                            style={{ color: '#0044aa', fontWeight: 'bold' }}\r\n                            onClick={changePassword}\r\n                        >\r\n                            Change password\r\n                        </Button>\r\n                        <Button\r\n                            type=\"text\"\r\n                            icon={<LogoutOutlined />}\r\n                            style={{ color: '#0044aa', fontWeight: 'bold' }}\r\n                            onClick={logout}\r\n                        >\r\n                            Log Out\r\n                        </Button>\r\n                    </Space>\r\n                </Space>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n};\r\n \r\nexport default Header;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React from 'react';\r\nimport { createBrowserHistory, createHashHistory } from 'history';\r\nimport { isElectron } from '../utils';\r\nimport Tab from './tab';\r\nimport Content from './content';\r\nimport Header from './header';\r\nimport '../style/home.css';\r\n\r\nfunction Home() {\r\n\r\n    const history = isElectron() ? createHashHistory() : createBrowserHistory();\r\n    const [nowTab, setNowTab] = React.useState(null);\r\n\r\n    const handleTab = (tab) => {\r\n        setNowTab(tab);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (!localStorage.getItem('user')) {\r\n            history.push('/login');\r\n            let pathUrl = window.location.href;\r\n            window.location.href = pathUrl;\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <Tab handleTab={handleTab} nowTab={nowTab} />\r\n            <Content nowTab={nowTab} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React from 'react';\r\nimport { Form, Input, Button, notification, Popconfirm } from 'antd';\r\n\r\nfunction PasswordForm() {\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const onFinish = (values) => {\r\n        if (values.newPassword !== values.confirmPassword) {\r\n            notification.warning({\r\n                message: \"Input Error\",\r\n                description: \"Confirm Password must be same with new password.\",\r\n                placement: 'topRight'\r\n            });\r\n        }\r\n        else {\r\n            fetch(`${process.env.REACT_APP_API}/change-password`, {\r\n                method: 'PUT',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ ...values, user: localStorage.getItem('user') })\r\n            }).then(res => res.json()).then((result) => {\r\n                if (result.message === 'Change Success') {\r\n                    notification.info({\r\n                        message: result.message,\r\n                        description: result.description,\r\n                        placement: 'topRight'\r\n                    });\r\n                    form.resetFields();\r\n                } else {\r\n                    notification.warning({\r\n                        message: result.message,\r\n                        description: result.description,\r\n                        placement: 'topRight'\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            form={form}\r\n            labelCol={{ span: 9 }}\r\n            wrapperCol={{ span: 9 }}\r\n            initialValues={{ remember: true }}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n            autoComplete=\"off\"\r\n            style={{\r\n                padding: '75px 20px 50px 20px',\r\n                backgroundColor: 'white',\r\n                boxShadow: '2px 4px 8px lightgray'\r\n            }}\r\n        >\r\n            <Form.Item\r\n                label=\"Old Password\"\r\n                name=\"oldPassword\"\r\n                rules={[{ required: true, message: 'Please input your old password!' }]}\r\n            >\r\n                <Input.Password size='large' />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label=\"New Password\"\r\n                name=\"newPassword\"\r\n                rules={[{ required: true, message: 'Please input your new password!' }]}\r\n            >\r\n                <Input.Password size='large' />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label=\"Confirm Password\"\r\n                name=\"confirmPassword\"\r\n                rules={[{ required: true, message: 'Please input your confirm password!' }]}\r\n            >\r\n                <Input.Password size='large' />\r\n            </Form.Item>\r\n\r\n            <Form.Item wrapperCol={{ offset: 9, span: 9 }}>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Submit\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default PasswordForm;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React from 'react';\r\nimport Header from './header';\r\nimport PasswordForm from './passwordForm';\r\nimport { createBrowserHistory, createHashHistory } from 'history';\r\nimport { isElectron } from '../utils';\r\n\r\nfunction Log() {\r\n\r\n    const history = isElectron() ? createHashHistory() : createBrowserHistory();\r\n\r\n    React.useEffect(() => {\r\n        if (!localStorage.getItem('user')) {\r\n            history.push('/login');\r\n            let pathUrl = window.location.href;\r\n            window.location.href = pathUrl;\r\n        } \r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Header />\r\n            <PasswordForm />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Log;\r\n","import React from 'react';\r\nimport { notification } from 'antd';\r\nimport { createBrowserHistory, createHashHistory } from 'history';\r\nimport { isElectron } from '../utils';\r\nimport '../style/login.scss';\r\n\r\nconst history = isElectron() ? createHashHistory() : createBrowserHistory();\r\nconst mode = 'login';\r\n\r\nclass LoginComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mode: this.props.mode\r\n        }\r\n    }\r\n    toggleMode() {\r\n        var newMode = this.state.mode === 'login' ? 'signup' : 'login';\r\n        this.setState({ mode: newMode });\r\n    }\r\n    onFinish(e) {\r\n        e.preventDefault();\r\n        const username = e.target[0].value;\r\n        const password = e.target[1].value;\r\n        const fullname = e.target[2].value;\r\n        const email = e.target[3].value;\r\n        const createpassword = e.target[4].value;\r\n        const repeatpassword = e.target[5].value;\r\n        if (this.state.mode === 'login') {\r\n            if (username && password) {\r\n                fetch(`${process.env.REACT_APP_API}/login`, {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({ username: username, password: password })\r\n                }).then(res => res.json()).then((result) => {\r\n                    if (result.message === 'Log In Success') {\r\n                        notification.info({\r\n                            message: result.message,\r\n                            description: result.description,\r\n                            placement: 'topRight'\r\n                        });\r\n                        localStorage.setItem(\"user\", username);\r\n                        localStorage.setItem(\"admin\", result.admin);\r\n                        history.push(\"/\");\r\n                        let pathUrl = window.location.href;\r\n                        window.location.href = pathUrl;\r\n                    } else {\r\n                        notification.warning({\r\n                            message: result.message,\r\n                            description: result.description,\r\n                            placement: 'topRight'\r\n                        });\r\n                    }\r\n                },\r\n                    (error) => {\r\n                        console.log(error);\r\n                        notification.error({\r\n                            message: 'Log In Error',\r\n                            description: 'Server has got some problems.',\r\n                            placement: 'topRight'\r\n                        });\r\n                    });\r\n            } else {\r\n                notification.warning({\r\n                    message: 'Input Error',\r\n                    description: 'All field are required.',\r\n                    placement: 'topRight'\r\n                });\r\n            }\r\n        } else {\r\n            if (fullname && email && createpassword && createpassword === repeatpassword) {\r\n                fetch(`${process.env.REACT_APP_API}/signup`, {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({\r\n                        fullname: fullname,\r\n                        email: email,\r\n                        createpassword: createpassword\r\n                    })\r\n                }).then(res => res.json()).then((result) => {\r\n                    if (result.message === 'Sign Up Success') {\r\n                        notification.info({\r\n                            message: result.message,\r\n                            description: result.description,\r\n                            placement: 'topRight'\r\n                        });\r\n                        const dom = document.getElementsByTagName('input');\r\n                        for (let i = 0; i < dom.length; i++) {\r\n                            dom[i].value = '';\r\n                        }\r\n                    } else {\r\n                        notification.warning({\r\n                            message: result.message,\r\n                            description: result.description,\r\n                            placement: 'topRight'\r\n                        });\r\n                    }\r\n                },\r\n                    (error) => {\r\n                        console.log(error);\r\n                        notification.error({\r\n                            message: 'Sign Up Error',\r\n                            description: 'Server has got some problem.',\r\n                            placement: 'topRight'\r\n                        });\r\n                    });\r\n            } else {\r\n                notification.warning({\r\n                    message: 'Input Error',\r\n                    description: createpassword !== repeatpassword ? 'Please confirm the password.' : 'All fields are required.',\r\n                    placement: 'topRight'\r\n                })\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className={`form-block-wrapper form-block-wrapper--is-${this.state.mode}`} ></div>\r\n                <section className={`form-block form-block--is-${this.state.mode}`}>\r\n                    <header className=\"form-block__header\">\r\n                        <h1>{this.state.mode === 'login' ? 'Welcome !' : 'Sign up'}</h1>\r\n                        <div className=\"form-block__toggle-block\">\r\n                            <span>{this.state.mode === 'login' ? 'Don\\'t' : 'Already'} have an account? Click here &#8594;</span>\r\n                            <input id=\"form-toggler\" type=\"checkbox\" onClick={this.toggleMode.bind(this)} />\r\n                            <label htmlFor=\"form-toggler\"></label>\r\n                        </div>\r\n                    </header>\r\n                    <LoginForm mode={this.state.mode} onSubmit={this.onFinish.bind(this)} />\r\n                </section>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nclass LoginForm extends React.Component {\r\n    // eslint-disable-next-line no-useless-constructor\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.props.onSubmit}>\r\n                <div className=\"form-block__input-wrapper\">\r\n                    <div className=\"form-group form-group--login\">\r\n                        <Input type=\"text\" id=\"username\" label=\"user name\" disabled={this.props.mode === 'signup'} />\r\n                        <Input type=\"password\" id=\"password\" label=\"password\" disabled={this.props.mode === 'signup'} />\r\n                    </div>\r\n                    <div className=\"form-group form-group--signup\">\r\n                        <Input type=\"text\" id=\"fullname\" label=\"full name\" disabled={this.props.mode === 'login'} />\r\n                        <Input type=\"email\" id=\"email\" label=\"email\" disabled={this.props.mode === 'login'} />\r\n                        <Input type=\"password\" id=\"createpassword\" label=\"password\" disabled={this.props.mode === 'login'} />\r\n                        <Input type=\"password\" id=\"repeatpassword\" label=\"repeat password\" disabled={this.props.mode === 'login'} />\r\n                    </div>\r\n                </div>\r\n                <button className=\"button button--primary full-width\" type=\"submit\">{this.props.mode === 'login' ? 'Log In' : 'Sign Up'}</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst Input = ({ id, type, label, disabled }) => (\r\n    <input className=\"form-group__input\" type={type} id={id} placeholder={label} disabled={disabled} />\r\n);\r\n\r\nconst Login = () => {\r\n\r\n    React.useEffect(() => {\r\n        if (localStorage.getItem(\"user\")) {\r\n            history.push(\"/\");\r\n            let pathUrl = window.location.href;\r\n            window.location.href = pathUrl;\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <div className=\"app\" />\r\n            <LoginComponent mode={mode} />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Login;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React from 'react';\r\nimport { Table, Space, Button, Input, Popconfirm } from 'antd';\r\nimport { SearchOutlined, DeleteOutlined } from '@ant-design/icons';\r\n\r\nfunction UserContent() {\r\n\r\n    const [isLoading, setIsLoading] = React.useState(false);\r\n    const [userData, setUserData] = React.useState([]);\r\n    const [talbleHeight, setTableHeight] = React.useState(window.innerHeight - 260);\r\n    const [pagination, setPagenation] = React.useState({\r\n        current: 1,\r\n        pageSize: 10,\r\n        position: ['bottomCenter', 'none']\r\n    });\r\n\r\n    const getUsers = () => {\r\n        setIsLoading(true);\r\n        fetch(`${process.env.REACT_APP_API}/get-users`).then(res => res.json()).then((result) => {\r\n            if (result.message === 'success') {\r\n                setUserData(result.data);\r\n                setIsLoading(false);\r\n            }\r\n        });\r\n    }\r\n\r\n    const deleteUser = (id) => {\r\n        setIsLoading(true);\r\n        fetch(`${process.env.REACT_APP_API}/delete-user`, {\r\n            method: 'DELETE',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ id })\r\n        }).then(res => res.json()).then((result) => {\r\n            if (result.message === 'success') {\r\n                getUsers();\r\n            }\r\n        });\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        getUsers();\r\n    }, []);\r\n\r\n    const tableSorter = (a, b, key) => {\r\n        if (typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n            return a[key] - b[key];\r\n        }\r\n        if (typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n            a = a[key].toLowerCase();\r\n            b = b[key].toLowerCase();\r\n            return a > b ? -1 : b > a ? 1 : 0;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    const getColumnSearchProps = (dataIndex) => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n            <div style={{ padding: 8 }}>\r\n                <Input\r\n                    placeholder={`Search ${dataIndex}`}\r\n                    value={selectedKeys[0]}\r\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n                    onPressEnter={confirm}\r\n                    style={{ marginBottom: 8, display: 'block' }}\r\n                />\r\n                <Space>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={confirm}\r\n                        icon={<SearchOutlined />}\r\n                        size=\"small\"\r\n                        style={{ width: 90 }}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                    <Button onClick={clearFilters} size=\"small\" style={{ width: 90 }}>\r\n                        Reset\r\n                    </Button>\r\n                    <Button\r\n                        type=\"link\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            confirm({ closeDropdown: false });\r\n                        }}\r\n                    >\r\n                        Filter\r\n                    </Button>\r\n                </Space>\r\n            </div>\r\n        ),\r\n        filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n        onFilter: (value, record) =>\r\n            record[dataIndex]\r\n                ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n                : '',\r\n    });\r\n\r\n    const columns = [\r\n        {\r\n            key: 'username',\r\n            title: 'User Name',\r\n            dataIndex: 'username',\r\n            sorter: (a, b) => tableSorter(a, b, 'username'),\r\n            ...getColumnSearchProps('username')\r\n        },\r\n        {\r\n            key: 'email',\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n            sorter: (a, b) => tableSorter(a, b, 'email'),\r\n            ...getColumnSearchProps('email')\r\n        },\r\n        {\r\n            key: 'action',\r\n            title: 'Action',\r\n            dataIndex: 'action',\r\n            render: (_, elm) => (\r\n                <Popconfirm\r\n                    placement=\"left\"\r\n                    title=\"Are you deleting this row?\"\r\n                    onConfirm={() => { deleteUser(elm.id) }}\r\n                    okText=\"Yes\"\r\n                    cancelText=\"No\"\r\n                >\r\n                    <Button type=\"text\" danger size=\"small\" icon={<DeleteOutlined />}>Delete</Button>\r\n                </Popconfirm>\r\n            )\r\n        }\r\n    ]\r\n\r\n    const handleResize = () => {\r\n        setTableHeight(window.innerHeight - 260);\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    const handleTableChange = (pagination) => {\r\n        setPagenation(pagination);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Table\r\n                className=\"user-table\"\r\n                bordered\r\n                rowKey=\"id\"\r\n                columns={columns}\r\n                dataSource={userData}\r\n                loading={isLoading}\r\n                pagination={pagination}\r\n                onChange={handleTableChange}\r\n                scroll={{ y: talbleHeight }}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default UserContent;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React from 'react';\r\nimport Header from './header';\r\nimport UserContent from './userContent';\r\nimport { createBrowserHistory, createHashHistory } from 'history';\r\nimport { isElectron } from '../utils';\r\n\r\nfunction Users() {\r\n\r\n    const history = isElectron() ? createHashHistory() : createBrowserHistory();\r\n\r\n    React.useEffect(() => {\r\n        if (!localStorage.getItem('admin')) {\r\n            history.push('/');\r\n            let pathUrl = window.location.href;\r\n            window.location.href = pathUrl;\r\n        } \r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Header />\r\n            <UserContent />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Users;\r\n","import React from 'react';\r\nimport { Router, Switch, Route } from 'react-router-dom';\r\nimport { notification } from 'antd';\r\nimport { createBrowserHistory, createHashHistory } from 'history';\r\nimport { isElectron } from './utils';\r\nimport Home from './component/home';\r\nimport Password from './component/password';\r\nimport Login from './component/login';\r\nimport Users from './component/users';\r\n\r\nfunction App() {\r\n\r\n    const history = isElectron() ? createHashHistory() : createBrowserHistory();\r\n\r\n    React.useEffect(() => {\r\n        fetch(`${process.env.REACT_APP_API}/create-base-tables`)\r\n        .then(res => res.json()).then((result) => {\r\n            if (result.message === 'success') {\r\n                console.log('Server is OK.');\r\n            }\r\n        }, (error) => {\r\n            console.log(error);\r\n            notification.error({\r\n                message: \"Connect Error\",\r\n                description: \"Server has got some problems.\",\r\n                placement: \"topRight\"\r\n            });\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Router history={history}>\r\n                <Switch>\r\n                    <Route path='/' exact>\r\n                        <Home />\r\n                    </Route>\r\n                    <Route path='/users' exact>\r\n                        <Users />\r\n                    </Route>\r\n                    <Route path='/change-password' exact>\r\n                        <Password />\r\n                    </Route>\r\n                    <Route path='/login' exact>\r\n                        <Login />\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}